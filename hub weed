local DiscordLib                        = loadstring(game:HttpGet "https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord")()
local ESPSettings                       = { PlayerESP = { Enabled = false, TracersOn = false, BoxesOn = false, NamesOn = false, DistanceOn = false, HealthOn = false, ToolOn = false, FaceCamOn = false, Distance = 2000 }, ScrapESP = { Enabled = false, Distance = 2000, LegendaryOnly = true, RareOnly = true, GoodOnly = true, BadOnly = true }, SafeESP = { Enabled = false, Distance = 2000, BigOnly = true, SmallOnly = true }, RegisterESP = { Enabled = false, Distance = 2000 }, ESPColor = Color3.fromRGB(255, 255, 255), ToolColor = Color3.fromRGB(255, 255, 255)};
local ESPFramework                      = loadstring(game:HttpGet("https://raw.githubusercontent.com/NougatBitz/Femware-Leak/main/ESP.lua", true))()

local win = DiscordLib:Window("Da Hub")

local serv = win:Server("Reanimations", "http://www.roblox.com/asset/?id=6031075938")
local serv1 = win:Server("Combat", "http://www.roblox.com/asset/?id=419503640")
local serv2 = win:Server("Universal", "http://www.roblox.com/asset/?id=419503640")
local serv3 = win:Server("Visualizer", "http://www.roblox.com/asset/?id=419503640")
local serv4 = win:Server("Logger", "http://www.roblox.com/asset/?id=419503640")

local btns = serv:Channel("Reanimations")
local btns1 = serv1:Channel("Combat Hubs")
local btns2 = serv2:Channel("Scripts")
local btns5 = serv1:Channel("Combat")
local btns6 = serv2:Channel("Player")
local btns3 = serv3:Channel("Boombox tings!")
local btns4 = serv4:Channel("Audio Logger")

-->> Animations tab
btns:Button("R15 Dances", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/uUR6pFVv", true))()
end)

btns:Button("Synapse X Hat Hub", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/1Cjz1RMH"))()
end)

btns:Button("All Executor Hat Hub", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/1Cjz1RMH"))()
end)

btns:Button("Nullware Hub", function()
    local LocalPlayer = game:GetService("Players").LocalPlayer
    local Heartbeat = game:GetService("RunService").Heartbeat
 
    Heartbeat:Connect(function()
    LocalPlayer.MaximumSimulationRadius = math.huge
    sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
end)
-- Script above is a fix to limbs falling --
 
-- Nullware Hub V3 | --
    getgenv().Theme = "Purple" -- To change the UI Theme, set this to one of the following options: "Red", "Purple", "Blue", "Green", "Yellow"
    loadstring(game:HttpGet("https://gist.githubusercontent.com/M6HqVBcddw2qaN4s/2d722888a388017c18028cd434c43a25/raw/dcccf1027fe4b90780e47767aaf584389c9d7771/EULma3fU90PUOKUn?identifier=".. (function()local a=""for b=1,256 do local c=math.random(1,3)a=a..string.char(c==1 and math.random(48,57)or c==2 and math.random(97,122)or c==3 and math.random(65,90))end;return a end)()))()
end)

btns:Button("Press before anything", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/14212352135124/re/main/join"))()
end)



btns:Seperator()



btns:Button("Neptunian V Edit", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/slvtz/EditNepV/main/EditedNeptunian"))()
end)

btns:Button("Sword Glitcher", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/SwordSimIsGood/Sword-SG/main/Swords%20FE%20Starmd'))()
end)

btns:Button("R6 Fling", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/fe-vappe/main/1'))()
end)

btns:Button("Creepy Crawler", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/creepy-crawler/main/14124'))()
end)

btns:Button("Walking Block", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/block/main/1313'))()
end)

btns:Button("Red Samurai", function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/kakabok1233453/asdasda/main/Red%20Samurai'),true))()
end)

btns:Button("Race Car", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/MonkoTubeYT/carscript/master/!carscript.lua',true))()
end)


btns:Button("Pyramid", function()
    local plr = game.Players.LocalPlayer
	game:GetService("RunService").Stepped:Connect(function()
		setsimulationradius(9e9,9e9)
		plr.ReplicationFocus = workspace
		settings().Physics.AllowSleep = false
	end)
 
	local runservice=game:service"RunService";
	local player=game:service"Players"["LocalPlayer"];
	local character=player["Character"];
	local blacklisted="Head Torso HumanoidRootPart";
	local limbs={};
 
	character["Humanoid"].HipHeight=2;
	--character["Head"]:FindFirstChildOfClass"SpecialMesh":Destroy();
 
	for i,v in next,character:children() do
		if (v.ClassName=="Part") and not blacklisted:find(v.Name) then
			v:BreakJoints();
			limbs[v.Name]=v;
		end
	end
 
	while runservice["Heartbeat"]:Wait() do
		limbs["Left Leg"].CFrame=character["HumanoidRootPart"].CFrame*CFrame.new(-1,-2,0);
		limbs["Right Leg"].CFrame=character["HumanoidRootPart"].CFrame*CFrame.new(1,-2,0);
		limbs["Left Arm"].CFrame=character["Left Leg"].CFrame*CFrame.new(-1,-2,0);
		limbs["Right Arm"].CFrame=character["Right Leg"].CFrame*CFrame.new(1,-2,0);
	end
end)

btns:Button("FE Ornithopter", function()
    loadstring(game:HttpGet(('https://pastebin.com/raw/bsZEGgbP'),true))()
end)


btns:Button("Flinging Titan", function()
    --Hats needed below(cost=0/free):
--https://www.roblox.com/catalog/451220849/Lavender-Updo
--https://www.roblox.com/catalog/48474294/ROBLOX-Girl-Hair
--https://www.roblox.com/catalog/62724852/Chestnut-Bun
--https://www.roblox.com/catalog/62234425/Brown-Hair
--made by Vidal#5057


function noplsmesh(hat)
    for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
    if v:IsA('Mesh') or v:IsA('SpecialMesh') then
    v:Remove()
    end
    end
    end
    local character = game.Players.LocalPlayer.Character
    local mode = 1
    
    
    game:GetService('RunService').Heartbeat:Connect(function()
        for i,v in pairs(character:GetChildren()) do
            if v:IsA("BasePart") then
                v.Velocity = Vector3.new(30,0,0)
                v.CFrame = v.CFrame
            end
        end
    end)
    
    game:GetService('RunService').Heartbeat:Connect(function()
        for i,v in pairs(character.Humanoid:GetAccessories()) do 
            if not v.Handle:FindFirstChild("AccessoryWeld") then 
                v.Handle.Velocity = Vector3.new(0,35,0)
            end
        end
    end)
    
    sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge)
    sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",99999999999999999999)
     
    -- // Uses Mizt's bypass \\ --
     
    Bypass = "death"
    loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()
    
    e = Instance.new("BodyVelocity",game.Players.LocalPlayer.Character.HumanoidRootPart)
    e.Velocity = Vector3.new(0,-27.5,0)
    e.P = math.huge
    e.MaxForce = Vector3.new(0,3000,0)
     
    local playerss = workspace.non
    
    local IsDead = false
    local StateMover = true
    local bbv,bullet
    if Bypass == "death" then
        bullet = game.Players.LocalPlayer.Character["HumanoidRootPart"]
        bullet.Transparency = 1
        bullet.Massless = true
        if bullet:FindFirstChildOfClass("Attachment") then
            for _,v in pairs(bullet:GetChildren()) do
                if v:IsA("Attachment") then
                    v:Destroy()
                end
            end
        end
        bbv = Instance.new("BodyPosition",bullet)
        bbv.Position = playerss["Right Arm"].CFrame.p
    end
     
    if Bypass == "death" then
    coroutine.wrap(function()
        while true do
            if not playerss or not playerss:FindFirstChildOfClass("Humanoid") or playerss:FindFirstChildOfClass("Humanoid").Health <= 0 then IsDead = true; return end
            if StateMover then
                bbv.Position = playerss["Torso"].CFrame.p
                bullet.Position = playerss["Torso"].CFrame.p
            end
            game:GetService("RunService").RenderStepped:wait()
        end
    end)()
    end
     
    bbav = Instance.new("BodyAngularVelocity",bullet)
        bbav.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
        bbav.P = 100000000000000000000000000000
        bbav.AngularVelocity = Vector3.new(10000000000000000000000000000000,100000000000000000000000000,100000000000000000)
    
    local Highlight = Instance.new("SelectionBox")
    Highlight.Adornee = game.Players.LocalPlayer.Character["HumanoidRootPart"]
    Highlight.LineThickness=0.05
    Highlight.Color3 = Color3.fromRGB(30,255,30)
    Highlight.Parent = game.Players.LocalPlayer.Character["HumanoidRootPart"]
    Highlight.Name = "RAINBOW"
    
    hrp = Highlight
    
    spawn(function()
    while true do
    srv.Stepped:Wait()
    if ded then break end
    hrp.Color3 = Color3.new(255/255,0/255,0/255)
    for i = 0,255,10 do
    wait()
    hrp.Color3 = Color3.new(255/255,i/255,0/255)
    end
    for i = 255,0,-10 do
    wait()
    hrp.Color3 = Color3.new(i/255,255/255,0/255)
    end
    for i = 0,255,10 do
    wait()
    hrp.Color3 = Color3.new(0/255,255/255,i/255)
    end
    for i = 255,0,-10 do
    wait()
    hrp.Color3 = Color3.new(0/255,i/255,255/255)
    end
    for i = 0,255,10 do
    wait()
    hrp.Color3 = Color3.new(i/255,0/255,255/255)
    end
    for i = 255,0,-10 do
    wait()
    hrp.Color3 = Color3.new(255/255,0/255,i/255)
    end
    end
    end)
    
    IT = Instance.new
    CF = CFrame.new
    VT = Vector3.new
    RAD = math.rad
    C3 = Color3.new
    UD2 = UDim2.new
    BRICKC = BrickColor.new
    ANGLES = CFrame.Angles
    EULER = CFrame.fromEulerAnglesXYZ
    COS = math.cos
    ACOS = math.acos
    SIN = math.sin
    ASIN = math.asin
    ABS = math.abs
    MRANDOM = math.random
    FLOOR = math.floor
    
    speed = 1
    sine = 1
    srv = game:GetService('RunService')
    
    reanim = playerss
    
    function hatset(yes,part,c1,c0,nm)
    reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
    reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
    reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()
    if nm==true then
    noplsmesh(yes)
    end
    end
    
    --put the hat script converted here do not put it in loop or it will make ur camera bugged.
    hatset('Hat1','Left Leg',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0.5+0*math.cos(sine/13),-0.15+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(100+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-25+0*math.cos(sine/13))),1),true)
    hatset('Pink Hair','Right Leg',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.15+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(100+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(25+0*math.cos(sine/13))),1),true)
    hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.3+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(75+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(35+0*math.cos(sine/13))),1),true)
    hatset('Kate Hair','Left Arm',CFrame.new(),reanim['Kate Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0.5+0*math.cos(sine/13),0.3+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(75+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-35+0*math.cos(sine/13))),1),true)
    
    RJ = reanim.HumanoidRootPart.RootJoint
    RS = reanim.Torso['Right Shoulder']
    LS = reanim.Torso['Left Shoulder']
    RH = reanim.Torso['Right Hip']
    LH = reanim.Torso['Left Hip']
    Root = reanim.HumanoidRootPart
    NECK = reanim.Torso.Neck
    NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    RH.C1 = CF(0.5,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    LH.C1 = CF(-0.5,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
    
    coroutine.wrap(function()
    while true do -- anim changer
    if HumanDied then break end
    sine = sine + speed
    local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
    local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
    local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
    local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
    local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
    local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
    if lookvector > reanim.Humanoid.WalkSpeed then
    lookvector = reanim.Humanoid.WalkSpeed
    end
    if lookvector < -reanim.Humanoid.WalkSpeed then
    lookvector = -reanim.Humanoid.WalkSpeed
    end
    if rightvector > reanim.Humanoid.WalkSpeed then
    rightvector = reanim.Humanoid.WalkSpeed
    end
    if rightvector < -reanim.Humanoid.WalkSpeed then
    rightvector = -reanim.Humanoid.WalkSpeed
    end
    local lookvel = lookvector / reanim.Humanoid.WalkSpeed
    local rightvel = rightvector / reanim.Humanoid.WalkSpeed
    if Root.Velocity.y > 1 then -- jump
    --jump clerp here
    elseif Root.Velocity.y < -1 then -- fall
    --fall clerp here
    elseif Root.Velocity.Magnitude < 2 then -- idle
    --idle clerp here
    reanim['Hat1'].Handle.AccessoryWeld.C0 =  reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0.5+0*math.cos(sine/13),-0.15+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(100+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-25+0*math.cos(sine/13))),1)
    reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.15+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(100+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(25+0*math.cos(sine/13))),1)
    reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.3+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(75+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(35+0*math.cos(sine/13))),1)
    reanim['Kate Hair'].Handle.AccessoryWeld.C0 = reanim['Kate Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0.5+0*math.cos(sine/13),0.3+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(75+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-35+0*math.cos(sine/13))),1)
    
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/18),2+0*math.cos(sine/18),0+0*math.cos(sine/18))*ANGLES(RAD(-15+0*math.cos(sine/18)),RAD(0+0*math.cos(sine/18)),RAD(0+0*math.cos(sine/18))),.3)
    RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/18),0.6+0*math.cos(sine/18),0+0*math.cos(sine/18))*ANGLES(RAD(25+0*math.cos(sine/18)),RAD(0+0*math.cos(sine/18)),RAD(45+8*math.cos(sine/18))),.3)
    LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/18),0.6+0*math.cos(sine/18),0+0*math.cos(sine/18))*ANGLES(RAD(25+0*math.cos(sine/18)),RAD(0+0*math.cos(sine/18)),RAD(-45+-8*math.cos(sine/18))),.3)
    RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(25+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(35+0*math.cos(sine/13))),.3)
    LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(25+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-35+0*math.cos(sine/13))),.3)
    
    
    elseif Root.Velocity.Magnitude < 20 then -- walk
    --walk clerp here
    reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(115+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(115+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(65+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    reanim['Kate Hair'].Handle.AccessoryWeld.C0 = reanim['Kate Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(65+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.01*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-35*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+35*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+35*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-35*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
    
    elseif Root.Velocity.Magnitude > 20 then -- run
    --run clerp here
    end
    srv.RenderStepped:Wait()
    end
    end)()
end)

btns:Button("Among Us", function()
    local netboost = 1000 --velocity 
--netboost usage: 
--set to false to disable
--set to a vector3 value if you dont want the velocity to change
--set to a number to change the velocity in real time with magnitude equal to the number
local idleMag = 0.005 --used only in case netboost is set to a number value
--if magnitude of the real velocity of a part is lower than this
--then the fake velocity is being set to Vector3.new(0, netboost, 0)
--the lower value the less you jitter but you might loose network ownership
local simradius = "shp" --simulation radius (net bypass) method
--"shp" - sethiddenproperty
--"ssr" - setsimulationradius
--false - disable
local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
local newanimate = false --disables the animate script and enables after reanimation
local discharscripts = true --disables all localScripts parented to your character before reanimation
local R15toR6 = true --tries to convert your character to r6 if its r15
local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
local method = 3 --reanimation method
--methods:
--0 - breakJoints (takes [loadtime] seconds to laod)
--1 - limbs
--2 - limbs + anti respawn
--3 - limbs + breakJoints after [loadtime] seconds
--4 - remove humanoid + breakJoints
--5 - remove humanoid + limbs
local alignmode = 2 --AlignPosition mode
--modes:
--1 - AlignPosition rigidity enabled true
--2 - 2 AlignPositions rigidity enabled both true and false
--3 - AlignPosition rigidity enabled false
local hedafterneck = true --disable aligns for head and enable after neck is removed

local lp = game:GetService("Players").LocalPlayer
local rs = game:GetService("RunService")
local stepped = rs.Stepped
local heartbeat = rs.Heartbeat
local renderstepped = rs.RenderStepped
local sg = game:GetService("StarterGui")
local ws = game:GetService("Workspace")
local cf = CFrame.new
local v3 = Vector3.new
local v3_0 = v3(0, 0, 0)
local inf = math.huge

local c = lp.Character

if not (c and c.Parent) then
    return
end

for i, v in pairs(c:GetDescendants()) do
    if v:IsA("CharacterMesh") or v:IsA("SpecialMesh") then
        v:Destroy()
    end
end

c:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (c and c.Parent) then
        c = nil
    end
end)

local function gp(parent, name, className)
	local ret = nil
	pcall(function()
		for i, v in pairs(parent:GetChildren()) do
			if (v.Name == name) and v:IsA(className) then
				ret = v
				break
			end
		end
	end)
	return ret
end

local function align(Part0, Part1)
	Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

	local att0 = Instance.new("Attachment", Part0)
	att0.Orientation = v3_0
	att0.Position = v3_0
	att0.Name = "att0_" .. Part0.Name
	local att1 = Instance.new("Attachment", Part1)
	att1.Orientation = v3_0
	att1.Position = v3_0
	att1.Name = "att1_" .. Part1.Name

	if (alignmode == 1) or (alignmode == 2) then
    	local ape = Instance.new("AlignPosition", att0)
    	ape.ApplyAtCenterOfMass = false
    	ape.MaxForce = inf
    	ape.MaxVelocity = inf
    	ape.ReactionForceEnabled = false
    	ape.Responsiveness = 200
    	ape.Attachment1 = att1
    	ape.Attachment0 = att0
    	ape.Name = "AlignPositionRtrue"
    	ape.RigidityEnabled = true
	end

	if (alignmode == 2) or (alignmode == 3) then
    	local apd = Instance.new("AlignPosition", att0)
    	apd.ApplyAtCenterOfMass = false
    	apd.MaxForce = inf
    	apd.MaxVelocity = inf
    	apd.ReactionForceEnabled = false
    	apd.Responsiveness = 200
    	apd.Attachment1 = att1
    	apd.Attachment0 = att0
    	apd.Name = "AlignPositionRfalse"
    	apd.RigidityEnabled = false
    end

	local ao = Instance.new("AlignOrientation", att0)
	ao.MaxAngularVelocity = inf
	ao.MaxTorque = inf
	ao.PrimaryAxisOnly = false
	ao.ReactionTorqueEnabled = false
	ao.Responsiveness = 200
	ao.Attachment1 = att1
	ao.Attachment0 = att0
	ao.RigidityEnabled = false

    if netboost then
        Part0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (Part0 and Part0.Parent) then
                Part0 = nil
            end
        end)
        spawn(function()
            if typeof(netboost) == "Vector3" then
    	        local vel = v3_0
    	        local rotvel = v3_0
            	while Part0 do
                    Part0.Velocity = vel
                    Part0.RotVelocity = rotvel
                    heartbeat:Wait()
                    if Part0 then
                        vel = Part0.Velocity
                        Part0.Velocity = netboost
                        Part0.RotVelocity = v3_0
                        stepped:Wait()
                    end
                end
        	elseif typeof(netboost) == "number" then
    	        local vel = v3_0
    	        local rotvel = v3_0
            	while Part0 do
                    Part0.Velocity = vel
                    Part0.RotVelocity = rotvel
                    heartbeat:Wait()
                    if Part0 then
                        local newvel = vel
                        local mag = newvel.Magnitude
                        if mag < idleMag then
                            newvel = v3(0, netboost, 0)
                        else
                            local multiplier = netboost / mag
                            newvel *= v3(multiplier,  multiplier, multiplier)
                        end
                        vel = Part0.Velocity
                        rotvel = Part0.RotVelocity
                        Part0.Velocity = newvel
                        Part0.RotVelocity = v3_0
                        stepped:Wait()
                    end
                end
        	end
        end)
    end
end

local function respawnrequest()
    local c = lp.Character
    local ccfr = ws.CurrentCamera.CFrame
	local fc = Instance.new("Model")
	local nh = Instance.new("Humanoid", fc)
	lp.Character = fc
	nh.Health = 0
	lp.Character = c
	fc:Destroy()
    local con = nil
    local function confunc()
        con:Disconnect()
        ws.CurrentCamera.CFrame = ccfr
    end
    con = renderstepped:Connect(confunc)
end

local destroyhum = (method == 4) or (method == 5)
local breakjoints = (method == 0) or (method == 4)
local antirespawn = (method == 0) or (method == 2) or (method == 3)

addtools = addtools and gp(lp, "Backpack", "Backpack")

if simradius == "shp" then
    local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
    if shp then
        spawn(function()
            while c and heartbeat:Wait() do
                shp(lp, "SimulationRadius", inf)
            end
        end)
    end
elseif simradius == "ssr" then
    local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
    if ssr then
        spawn(function()
            while c and heartbeat:Wait() do
                ssr(inf)
            end
        end)
    end
end

antiragdoll = antiragdoll and function(v)
    if v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint") then
        v.Parent = nil
    end
end

if antiragdoll then
    for i, v in pairs(c:GetDescendants()) do
        antiragdoll(v)
    end
    c.DescendantAdded:Connect(antiragdoll)
end

if antirespawn then
    respawnrequest()
end

if method == 0 then
	wait(loadtime)
	if not c then
	    return
	end
end

if discharscripts then
    for i, v in pairs(c:GetChildren()) do
        if v:IsA("LocalScript") then
            v.Disabled = true
        end
    end
elseif newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate and (not animate.Disabled) then
        animate.Disabled = true
    else
        newanimate = false
    end
end

local hum = c:FindFirstChildOfClass("Humanoid")
if hum then
    for i, v in pairs(hum:GetPlayingAnimationTracks()) do
	    v:Stop()
    end
end

if addtools then
    for i, v in pairs(addtools:GetChildren()) do
        if v:IsA("Tool") then
            v.Parent = c
        end
    end
end

pcall(function()
    settings().Physics.AllowSleep = false
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)

local OLDscripts = {}

for i, v in pairs(c:GetDescendants()) do
	if v.ClassName == "Script" then
		table.insert(OLDscripts, v)
	end
end

local scriptNames = {}

for i, v in pairs(c:GetDescendants()) do
	if v:IsA("BasePart") then
	    local newName = tostring(i)
	    local exists = true
	    while exists do
		    exists = false
		    for i, v in pairs(OLDscripts) do
		        if v.Name == newName then
		            exists = true
		        end
		    end
		    if exists then
		        newName = newName .. "_"    
		    end
	    end
        table.insert(scriptNames, newName)
		Instance.new("Script", v).Name = newName
	end
end

c.Archivable = true
local cl = c:Clone()
for i, v in pairs(cl:GetDescendants()) do
    pcall(function()
        v.Transparency = 1
        v.Anchored = false
    end)
end

local model = Instance.new("Model", c)
model.Name = model.ClassName

model:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (model and model.Parent) then
        model = nil
    end
end)

for i, v in pairs(c:GetChildren()) do
	if v ~= model then
	    if destroyhum and v:IsA("Humanoid") then
	        v:Destroy()
	    else
	        if addtools and v:IsA("Tool") then
	            for i1, v1 in pairs(v:GetDescendants()) do
	                if v1 and v1.Parent and v1:IsA("BasePart") then
	                    local bv = Instance.new("BodyVelocity", v1)
	                    bv.Velocity = v3_0
	                    bv.MaxForce = v3(1000, 1000, 1000)
	                    bv.P = 1250
	                    bv.Name = "bv_" .. v.Name
	                end
	            end
	        end
		    v.Parent = model
	    end
	end
end
local head = gp(model, "Head", "BasePart")
local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
if breakjoints then
    model:BreakJoints()
else
    if head and torso then
        for i, v in pairs(model:GetDescendants()) do
            if v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
                local save = false
                if (v.Part0 == torso) and (v.Part1 == head) then
                    save = true
                end
                if (v.Part0 == head) and (v.Part1 == torso) then
                    save = true
                end
                if save then
                    if hedafterneck then
                        hedafterneck = v
                    end
                else
                    v:Destroy()
                end
            end
        end
    end
    if method == 3 then
        spawn(function()
            wait(loadtime)
            if model then
                model:BreakJoints()
            end
        end)
    end
end

cl.Parent = c
for i, v in pairs(cl:GetChildren()) do
	v.Parent = c
end
cl:Destroy()

local modelDes = {}
for i, v in pairs(model:GetDescendants()) do
    if v:IsA("BasePart") then
        i = tostring(i)
        local con = nil
        con = v:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (v and v.Parent) then
                con:Disconnect()
                modelDes[i] = nil
            end
        end)
        modelDes[i] = v
    end
end
local modelcolcon = nil
local function modelcolf()
    if model then
        for i, v in pairs(modelDes) do
			v.CanCollide = false
		end
    else
        modelcolcon:Disconnect()
    end
end
modelcolcon = stepped:Connect(modelcolf)
modelcolf()

for i, scr in pairs(model:GetDescendants()) do
	if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
		local Part0 = scr.Parent
		if Part0:IsA("BasePart") then
			for i1, scr1 in pairs(c:GetDescendants()) do
				if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
					local Part1 = scr1.Parent
					if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
						align(Part0, Part1)
						break
					end
				end
			end
		end
	end
end

if (typeof(hedafterneck) == "Instance") and head and head.Parent then
    local aligns = {}
    for i, v in pairs(head:GetDescendants()) do
        if v:IsA("AlignPosition") or v:IsA("AlignOrientation") then
            table.insert(aligns, v)
            v.Enabled = false
        end
    end
    spawn(function()
        while c and hedafterneck and hedafterneck.Parent do
            stepped:Wait()
        end
        if not (c and head and head.Parent) then
            return
        end
        for i, v in pairs(aligns) do
            pcall(function()
                v.Enabled = true
            end)
        end
    end)
end

for i, v in pairs(c:GetDescendants()) do
	if v and v.Parent then
		if v.ClassName == "Script" then
			if table.find(scriptNames, v.Name) then
				v:Destroy()
			end
		elseif not v:IsDescendantOf(model) then
			if v:IsA("Decal") then
			    v.Transparency = 1
			elseif v:IsA("ForceField") then
			    v.Visible = false
			elseif v:IsA("Sound") then
			    v.Playing = false
			elseif v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
				v.Enabled = false
			end
		end
	end
end

if newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate then
        animate.Disabled = false
    end
end

if addtools then
    for i, v in pairs(c:GetChildren()) do
        if v:IsA("Tool") then
            v.Parent = addtools
        end
    end
end

local hum0 = model:FindFirstChildOfClass("Humanoid")
local hum1 = c:FindFirstChildOfClass("Humanoid")
if hum1 then
    ws.CurrentCamera.CameraSubject = hum1
    local camSubCon = nil
    local function camSubFunc()
        camSubCon:Disconnect()
        if c and hum1 and (hum1.Parent == c) then
            ws.CurrentCamera.CameraSubject = hum1
        end
    end
    camSubCon = renderstepped:Connect(camSubFunc)
	if hum0 then
		hum0.Changed:Connect(function(prop)
			if (prop == "Jump") and hum1 and hum1.Parent then
				hum1.Jump = hum0.Jump
			end
		end)
	else
	    lp.Character = nil
	    lp.Character = c
	end
end

local rb = Instance.new("BindableEvent", c)
rb.Event:Connect(function()
	rb:Destroy()
	sg:SetCore("ResetButtonCallback", true)
	if destroyhum then
	    c:BreakJoints()
	    return
	end
	if antirespawn then
	    if hum0 and hum0.Parent and (hum0.Health > 0) then
	        model:BreakJoints()
	        hum0.Health = 0
	    end
		respawnrequest()
	else
	    if hum0 and hum0.Parent and (hum0.Health > 0) then
	        model:BreakJoints()
	        hum0.Health = 0
	    end
	end
end)
sg:SetCore("ResetButtonCallback", rb)

spawn(function()
	while c do
		if hum0 and hum0.Parent and hum1 and hum1.Parent then
            hum1.Jump = hum0.Jump
        end
		wait()
	end
	sg:SetCore("ResetButtonCallback", true)
end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
if R15toR6 then
	local cfr = nil
	pcall(function()
		cfr = gp(c, "HumanoidRootPart", "BasePart").CFrame
	end)
	if cfr then
		local R6parts = { 
			head = {
				Name = "Head",
				Size = v3(2, 1, 1),
				R15 = {
					Head = 0
				}
			},
			torso = {
				Name = "Torso",
				Size = v3(2, 2, 1),
				R15 = {
					UpperTorso = 0.2,
					LowerTorso = -0.8
				}
			},
			root = {
				Name = "HumanoidRootPart",
				Size = v3(2, 2, 1),
				R15 = {
					HumanoidRootPart = 0
				}
			},
			leftArm = {
				Name = "Left Arm",
				Size = v3(1, 2, 1),
				R15 = {
					LeftHand = -0.85,
					LeftLowerArm = -0.2,
					LeftUpperArm = 0.4
				}
			},
			rightArm = {
				Name = "Right Arm",
				Size = v3(1, 2, 1),
				R15 = {
					RightHand = -0.85,
					RightLowerArm = -0.2,
					RightUpperArm = 0.4
				}
			},
			leftLeg = {
				Name = "Left Leg",
				Size = v3(1, 2, 1),
				R15 = {
					LeftFoot = -0.85,
					LeftLowerLeg = -0.15,
					LeftUpperLeg = 0.6
				}
			},
			rightLeg = {
				Name = "Right Leg",
				Size = v3(1, 2, 1),
				R15 = {
					RightFoot = -0.85,
					RightLowerLeg = -0.15,
					RightUpperLeg = 0.6
				}
			}
		}
		for i, v in pairs(c:GetChildren()) do
			if v:IsA("BasePart") then
				for i1, v1 in pairs(v:GetChildren()) do
					if v1:IsA("Motor6D") then
						v1.Part0 = nil
					end
				end
			end
		end
		for i, v in pairs(R6parts) do
			local part = Instance.new("Part")
			part.Name = v.Name
			part.Size = v.Size
			part.CFrame = cfr
			part.Anchored = false
			part.Transparency = 1
			part.CanCollide = false
			for i1, v1 in pairs(v.R15) do
				local R15part = gp(c, i1, "BasePart")
				local att = gp(R15part, "att1_" .. i1, "Attachment")
				if R15part then
					local weld = Instance.new("Weld", R15part)
					weld.Name = "Weld_" .. i1
					weld.Part0 = part
					weld.Part1 = R15part
					weld.C0 = cf(0, v1, 0)
					weld.C1 = cf(0, 0, 0)
					R15part.Massless = true
					R15part.Name = "R15_" .. i1
					R15part.Parent = part
				    if att then
				        att.Parent = part
				        att.Position = v3(0, v1, 0)
				    end
				end
			end
			part.Parent = c
			R6parts[i] = part
		end
		local R6joints = {
			neck = {
				Parent = R6parts.torso,
				Name = "Neck",
				Part0 = R6parts.torso,
				Part1 = R6parts.head,
				C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rootJoint = {
				Parent = R6parts.root,
				Name = "RootJoint" ,
				Part0 = R6parts.root,
				Part1 = R6parts.torso,
				C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rightShoulder = {
				Parent = R6parts.torso,
				Name = "Right Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightArm,
				C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftShoulder = {
				Parent = R6parts.torso,
				Name = "Left Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.leftArm,
				C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			},
			rightHip = {
				Parent = R6parts.torso,
				Name = "Right Hip",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightLeg,
				C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftHip = {
				Parent = R6parts.torso,
				Name = "Left Hip" ,
				Part0 = R6parts.torso,
				Part1 = R6parts.leftLeg,
				C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			}
		}
		for i, v in pairs(R6joints) do
			local joint = Instance.new("Motor6D")
			for prop, val in pairs(v) do
				joint[prop] = val
			end
			R6joints[i] = joint
		end
		hum1.RigType = Enum.HumanoidRigType.R6
		hum1.HipHeight = 0
	end
end

wait()
if not c then
    return
end

local venttoggle = false
local vented = false
local mode2 = false
local attack = false
local modetoggle = false
local dead = false
local dtoggle = false
local sittoggle = false
local sit = false
local sine = 0
local mouse = lp:GetMouse()

local joints = {
    ["RootJoint"] = "",
    ["Neck"] = "",
    ["Right Hip"] = "",
    ["Left Hip"] = "",
    ["Left Shoulder"] = "",
    ["Right Shoulder"] = ""
}

for i, v in pairs(c:GetDescendants()) do
    if v:IsA("Motor6D") and (joints[v.Name] == "") and (not v:IsDescendantOf(model)) then
        joints[v.Name] = v
    end
end

for i, v in pairs(joints) do
    if v and (v ~= "") then
        v.C0 = cf(0, 0, 0)
        v.C1 = cf(0, 0, 0)
    else
        return
    end
end

local Root = gp(c, "HumanoidRootPart", "BasePart")
if not Root then
    return
end

local function replace(a)
    local b, c = a.Part0, a.Part1
    a.Part1, a.Part0 = b, c
end

replace(joints["Left Shoulder"])
replace(joints["Right Shoulder"])
replace(joints["Left Hip"])
replace(joints["Right Hip"])

for i, v in pairs(c:GetChildren()) do
    if v:IsA("Accessory") then
        v:Destroy()
    end
end

joints.Neck.C0 = cf(0, 0.3, -0.5)

mouse.Button1Down:Connect(function()
    if not (kill or mode2 or dead) then
        attack = true
        vented = false
        hum1.WalkSpeed = 0
        wait(0.5)
        hum1.WalkSpeed = 16
        attack = false
    end
end)

mouse.KeyDown:Connect(function(key)
    if not c then 
        return 
    end
    key = key:lower()
    if k == "e" then
        if not venttoggle then
            modetoggle = false
            mode2 = false
            venttoggle = true
            vented = true
            hum1.WalkSpeed = 100
            position = "ventidle"
        elseif venttoggle then
            venttoggle = false
            vented = false
            hum1.WalkSpeed = 16
        end
    elseif key == "f" then
        if not modetoggle then
            venttoggle = false
            vented = false
            modetoggle = true
            mode2 = true
            sittoggle = false
            sit = false
            hum1.WalkSpeed = 60
        elseif modetoggle then
            modetoggle = false
            mode2 = false
            hum1.WalkSpeed = 16
        end
    elseif key == "q" then
        if dtoggle == false then
            venttoggle = false
            vented = false
            modetoggle = false
            mode2 = false
            dtoggle = true
            dead = true
            sittoggle = false
            sit = false
            hum1.WalkSpeed = 0
        elseif dtoggle == true then
            dtoggle = false
            dead = false
            hum1.WalkSpeed = 16
        end
    elseif key == "c" then
        if sittoggle == false then
            venttoggle = false
            vented = false
            modetoggle = false
            mode2 = false
            dtoggle = false
            dead = false
            sittoggle = true
            sit = true
            hum1.WalkSpeed = 0
        elseif sittoggle == true then
            sittoggle = false
            sit = false
            hum1.WalkSpeed = 16
        end
    end
end)

local pose = "idle"
while stepped:Wait() and c do
    if attack then
        pose = "attack"
    elseif dead then
        pose = "dead"
    elseif sit then
        pose = "sit"
    elseif mode2 then
        if Root.Velocity.Magnitude < 2 then
            pose = "idle2"
        elseif Root.Velocity.Magnitude > 20 then
            pose = "walk2"
        end
    else
        if Root.Velocity.y > 1 then
            pose = "jump"
        elseif Root.Velocity.y < -1 then
            pose = "fall"
        elseif Root.Velocity.Magnitude < 2 then
            pose = "idle"
        elseif Root.Velocity.Magnitude < 20 then
            pose = "walk"
        elseif Root.Velocity.Magnitude > 20 then
            pose = "run"
        end 
    end
    sine += 1
    if pose == "idle" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0.3 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 10 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 10 * math.sin(sine/12)), math.rad(20 + 0 * math.sin(sine/12)), math.rad(-3 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 10 * math.sin(sine/12)), math.rad(-20 + 0 * math.sin(sine/12)), math.rad(3 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "walk" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0.3 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + 0.3 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 30 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + -0.3 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + -30 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "jump" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(15 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "fall" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(15 + 10 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(-10 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(10 + 5 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(10 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "vent" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + -8 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 1.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(26.02 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "ventidle" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), -20 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 1.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(26.02 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "idle2" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/20), 3 + 0.3 * math.sin(sine/20), 0 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(0 + 20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/20), 1 + 0 * math.sin(sine/20), 1 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(20 + -20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/20), 2 + 0 * math.sin(sine/20), 0.5 + -0.5 * math.sin(sine/20)) * CFrame.Angles(math.rad(10 + -20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)
    elseif pose == "walk2" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/20), 3 + 0.3 * math.sin(sine/20), 0 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(-60 + 10 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/20), 2 + 0 * math.sin(sine/20), 0.3 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(0 + -10 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(-5 + 0 * math.sin(sine/20))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/20), 1 + 0 * math.sin(sine/20), 0.5 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(0 + -20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(5 + 0 * math.sin(sine/20))),0.1)
    elseif pose == "attack" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/5), 0 + 0 * math.sin(sine/5), 0 + 0 * math.sin(sine/5)) * CFrame.Angles(math.rad(30 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(30 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(30 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(4 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "sit" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/5), -1.8 + 0 * math.sin(sine/5), 0 + 0 * math.sin(sine/5)) * CFrame.Angles(math.rad(10 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), -1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-90 + 0 * math.sin(sine/12)), math.rad(10 + 0 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), -1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-90 + 0 * math.sin(sine/12)), math.rad(-10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
    elseif pose == "dead" then
        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/5), -2.5 + 0 * math.sin(sine/5), -1 + 0 * math.sin(sine/5)) * CFrame.Angles(math.rad(-90 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5))),0.1)
        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 3 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12))),0.1)
        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 3 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(4 + 0 * math.sin(sine/12))),0.1)
    end
    joints["Right Shoulder"].C0 = joints["Right Shoulder"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), -0.8 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
    joints["Left Shoulder"].C0 = joints["Left Shoulder"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), -0.8 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
  end
end)

btns:Button("Block.", function()
    game.Players.LocalPlayer.Character["Left Arm"]:Destroy()
    game.Players.LocalPlayer.Character["Right Leg"]:Destroy()
    game.Players.LocalPlayer.Character["Left Leg"]:Destroy()
    game.Players.LocalPlayer.Character["Right Arm"]:Destroy()
    game.Players.LocalPlayer.Character.Humanoid.HipHeight = 0
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("SpecialMesh") or v.Name == "SpecialMesh" then
            v:Destroy()
        end
    end
end)
-->> End Animations Tab

-->> Combat tab
btns1:Button("Dark Hub [Hella Games]", function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/RandomAdamYT/DarkHub/master/Init'),true))()
end)

btns1:Button("VG Hub [Hella Games]", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/V.G-Hub/main/V.Ghub'))()
end)

btns1:Button("MheeHub [Alot of games ig]", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/i53Y3rew",true))()
end)

btns1:Seperator()

btns1:Button("Criminality Elite V4", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/14212352135124/yoyo/main/yoyo"))()
end)

btns1:Button("Criminality Elite V3", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/14212352135124/elite-v3/main/source%20101"))()
end)

btns1:Button("Criminality BirdzWare", function()
    local Success, Result = pcall(game.HttpGet, game, "https://raw.githubusercontent.com/mrbirdz/Birdzware/main/loader.lua")

    if Success then
    loadstring(Result)()
    else
    game:GetService("Players").LocalPlayer:Kick("GitHub failed to respond.");
  end
end)

btns1:Seperator()

btns1:Button("Vynixu MM2", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Neon-Fox/roblox-scripts/main/VynixuMM2"))()
end)

btns1:Seperator()

btns1:Button("Hex Hub Counter Blox", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/venosu/Hex-Hub/main/hexhub.lua'))()
end)

btns1:Seperator()

btns1:Button("Elite Jailbreak", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/jailbreak/main/jail'))()
end)

btns1:Button("JailBreak Auto Rob", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/wawsdasdacx/ohascriptnrrewading/main/jbsaxcriptidk1"))();
end)

btns1:Button("Magma Gui Jailbreak", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/opBandwidth/Magma-Core/main/Jailbreak/Main.lua"))()
end)

btns1:Seperator()

btns1:Button("DoxZul Da Hood", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/ds-hood/main/d124'))()
end)

btns1:Button("Swag Mode Da Hood", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lerkermer/lua-projects/master/SwagModeV002'))()
end)

btns1:Button("Late Gui Da Hood", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Impulseonyoutube/scripts/main/dahood"))()
end)

btns1:Button("Faded Da Hood", function()
    _G.Toggles = "V" -- You can put any keybind
    loadstring(game:HttpGet("https://raw.githubusercontent.com/NighterEpic/Faded-Grid/main/YesEpic", true))()
end)

btns1:Button("Enclosed Da Hood", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/Pvpahh/enclosed/main/enclosed'))()
end)

btns1:Seperator()

btns1:Button("Elite Arsenal", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/Arsenal/main/Arsenal'))()
end)

btns1:Button("Owl Hub Arsenal", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
end)

btns1:Button("Bolts Hub Arsenal", function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/fusiongreg/BoltsHubV5/main/Arsenal2'),true))()   
end)

btns1:Seperator()

btns1:Button("Elite Pistol 1v1", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/Pistol-1v1-/main/1v1'))() 
end)

btns1:Seperator()

btns1:Button("Elite No Scope Arcade", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/No-scope/main/no%20scoped'))()
end)

btns1:Button("Silent Aim No Scope Arcade", function()
    getgenv().Settings = {
        Fov = 150,
        Hitbox = "Head",
        FovCircle = true,
     }
      
     loadstring(game:HttpGet("https://raw.githubusercontent.com/WetCheezit/Releases/main/No-Scope-Arcade/Silent%20aim.lua"))()
end)

btns1:Seperator()

btns1:Button("Elite Big Paintball", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/14212352135124/Big-Paintball/main/PAINTBALLISSOBADOMGBADGAMELOL'))()
end)

btns1:Button("LK Hub Big Paintball", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LeoKholYt/roblox/main/bigpaintball.lua",true))()
end)

btns1:Button("Owl Hub Big Paintball", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
end)

btns1:Seperator()

btns1:Button("Project Hook Combat Warriors", function()
    loadstring(game:HttpGet("https://projecthook.xyz/scripts/free.lua"))()
end)
-->> End Combat Tab

-->> Combat 2nd Tab
btns5:Seperator()

btns5:Toggle("Enable ESP",ESPSettings.PlayerESP.Enabled, function(V)
    ESPSettings.PlayerESP.Enabled = V

    ESPFramework.Color = ESPSettings.ESPColor
    ESPFramework.ToolColor = ESPSettings.ToolColor
    ESPFramework.Tracers = ESPSettings.PlayerESP.TracersOn
    ESPFramework.Names = ESPSettings.PlayerESP.NamesOn
    ESPFramework.Health = ESPSettings.PlayerESP.HealthOn
    ESPFramework.Distance = ESPSettings.PlayerESP.DistanceOn
    ESPFramework.Tool = ESPSettings.PlayerESP.ToolOn
    ESPFramework.Boxes = ESPSettings.PlayerESP.BoxesOn
    ESPFramework.FaceCamera = ESPSettings.PlayerESP.FaceCamOn
    ESPFramework:Toggle(ESPSettings.PlayerESP.Enabled)
end, "PlayerESPsToggle")

btns5:Toggle("Box ESP",ESPSettings.PlayerESP.BoxesOn, function(V)
    ESPSettings.PlayerESP.BoxesOn = V
    ESPFramework.Boxes = ESPSettings.PlayerESP.BoxesOn
end)

btns5:Toggle("Tracers ESP",ESPSettings.PlayerESP.TracersOn, function(V)
    ESPSettings.PlayerESP.TracersOn = V
    ESPFramework.Tracers = ESPSettings.PlayerESP.TracersOn
end)

btns5:Toggle("Name ESP",ESPSettings.PlayerESP.NamesOn, function(V)
    ESPSettings.PlayerESP.NamesOn = V
    ESPFramework.Names = ESPSettings.PlayerESP.NamesOn
end)

btns5:Toggle("Distance ESP",ESPSettings.PlayerESP.DistanceOn, function(V)
    ESPSettings.PlayerESP.DistanceOn = V
    ESPFramework.Distance = ESPSettings.PlayerESP.DistanceOn
end)

btns5:Toggle("Health ESP",ESPSettings.PlayerESP.HealthOn, function(V)
    ESPSettings.PlayerESP.HealthOn = V
    ESPFramework.Health = ESPSettings.PlayerESP.HealthOn
end)

btns5:Seperator()

local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local RenderStepped = RunService.RenderStepped

local LocalPlayer = Players.LocalPlayer
local chr = LocalPlayer.Character
local hum = chr:WaitForChild("Humanoid")

local game = game;
local GetService = game.GetService;

local RunService = game:GetService("RunService")
local RenderStepped = RunService.RenderStepped

local Workspace = GetService(game, "Workspace");
local Players = GetService(game, "Players");
local ReplicatedStorage = GetService(game, "ReplicatedStorage");
local StarterGui = GetService(game, "StarterGui");

local resume = coroutine.resume 
local create = coroutine.create

local LogService = GetService(game, "LogService");
local HttpService = GetService(game, "HttpService");
local ScriptContext = GetService(game, "ScriptContext");

local UIS = game:GetService("UserInputService")

local Request = http_request or request or HttpPost or syn.request
local Player = Players.LocalPlayer;
local Character = Player.Character;
local Mouse = Player:GetMouse()
local Cam = workspace.CurrentCamera;

local WorldToScreen = Cam.WorldToScreenPoint
local WorldToViewportPoint = Cam.WorldToViewportPoint
local GetPartsObscuringTarget = Cam.GetPartsObscuringTarget

local SilentSettings = { Main = { Enabled = false, TeamCheck = false, VisibleCheck = false, TargetPart = "Head" }, FOVSettings = { Visible = false, Radius = 120 } };
local ValidTargetParts = {"Head", "Torso"};

local RequiredArgs = {
    ArgCountRequired = 3,
        Args = {
        "Instance", "Vector3", "Vector3", "RaycastParams"
    }
}

local fov_circle = Drawing.new("Circle")
fov_circle.Thickness = 1
fov_circle.NumSides = 100
fov_circle.Radius = 120
fov_circle.Filled = false
fov_circle.Visible = false
fov_circle.ZIndex = 999
fov_circle.Transparency = 1
fov_circle.Color = Color3.fromRGB(255, 255 ,255)

local function GetPositionOnScreen(Vector)
    local Vec3, OnScreen = WorldToScreen(Cam, Vector)
    return Vector2.new(Vec3.X, Vec3.Y), OnScreen
end
local function ValidateArguments(Args, RayMethod)
    local Matches = 0

    if #Args < RayMethod.ArgCountRequired then
        return false
    end

    for Pos, Argument in next, Args do
        if typeof(Argument) == RayMethod.Args[Pos] then
            Matches = Matches + 1
        end
    end

    return Matches >= RayMethod.ArgCountRequired
end
        
local function GetDirection(Origin, Position)
    return (Position - Origin).Unit * 1000
end
        
local function GetMousePosition()
    return Vector2.new(Mouse.X, Mouse.Y)
end
        
        local function GetClosestPlayer()
            if not SilentSettings.Main.TargetPart then return end

            local Closest
            local DistanceToMouse

            for _, v in next, game.GetChildren(Players) do
                if v == Player then continue end
                if SilentSettings.Main.TeamCheck and v.Team == Player.Team then continue end
        
                local Character = v.Character
                if not Character then continue end
        
                local HumanoidRootPart = game.FindFirstChild(Character, "HumanoidRootPart")
                local Humanoid = game.FindFirstChild(Character, "Humanoid")
        
                if not HumanoidRootPart or not Humanoid or Humanoid and Humanoid.Health <= 0 then continue end
        
                local ScreenPosition, OnScreen = GetPositionOnScreen(HumanoidRootPart.Position)
        
                if not OnScreen then continue end
        
                local Distance = (GetMousePosition() - ScreenPosition).Magnitude
                if Distance <= (DistanceToMouse or (SilentSettings.Main.Enabled and SilentSettings.FOVSettings.Radius) or 2000) then
                    Closest = ((SilentSettings.Main.TargetPart == "Random" and Character[ValidTargetParts[math.random(1, #ValidTargetParts)]]) or Character[SilentSettings.Main.TargetPart])
                    DistanceToMouse = Distance
                end
            end
            return Closest
        end
        
                local oldNamecall
        oldNamecall = hookmetamethod(game, "__namecall", function(...)
            local Method = getnamecallmethod()
            local Arguments = {...}
            local self = Arguments[1]
        
            if SilentSettings.Main.Enabled and self == workspace then
                if ValidateArguments(Arguments, RequiredArgs) then
                    local A_Origin = Arguments[2]
                    local HitPart = GetClosestPlayer()

                    if HitPart then
                        Arguments[3] = GetDirection(A_Origin, HitPart.Position)
    
                        return oldNamecall(unpack(Arguments))
                    end
                end
            end

            return oldNamecall(...)
    end)
        

resume(create(function()
game:GetService("RunService").RenderStepped:Connect(function()
        if SilentSettings.FOVSettings.Visible then 
            fov_circle.Position = GetMousePosition() + Vector2.new(0, 36)
        end
    end)
end))

btns5:Toggle("Silent Aim",false, function(State)
    SilentSettings.Main.Enabled = State
end)

btns5:Toggle("Show Fov",false, function(State)
    SilentSettings.FOVSettings.Visible = State
    fov_circle.Visible = State
end)

btns5:Slider("Fov Radius", 0, 1000, 400, function(Value)
    SilentSettings.FOVSettings.Radius = Value
    fov_circle.Radius = Value
end)

btns5:Colorpicker("Fov Color", Color3.fromRGB(255,1,1), function(V)
    fov_circle.Color = V
end)
-->> End Combat 2nd Tab

-->> Script universal Tab
btns2:Button("Remote Spy", function()
    loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()
end)

btns2:Button("Mr Spy", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/DU2RTZkq", true))()
end)

btns2:Button("Cheat Blox", function()
    _G.SRS_COLOR = "cyan"
    loadstring(game:HttpGet("https://pastebin.com/raw/n566kZd5",true))()
end)

btns2:Button("Dex V3", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Neon-Fox/roblox-scripts/main/Dex-V3"))()
end)

btns2:Seperator()

btns2:Button("Inf Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/14212352135124/13123-inf-yield/main/inf%20yield"))()
end)

btns2:Button("Cmd X", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
end)

btns2:Button("Fates Admin", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))();
end)

btns2:Button("Shattervast Admin", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/YxRYUJQx"))();
end)
-->> End Script universal Tab

-->> Player scripts tab
btns6:Button("Anti Afk", function()
    local VirtualUser=game:service'VirtualUser'
	game:service'Players'.LocalPlayer.Idled:connect(function()
		VirtualUser:CaptureController()
		VirtualUser:ClickButton2(Vector2.new())
	end)
end)

btns6:Toggle("Toggle JumpPower",false, function(State)
    if State == true then
        getgenv().JumpPowerValue = _G.JumpPower; --set your desired walkspeed here
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
        end)
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
        end 
        if State == false then
        getgenv().JumpPowerValue = 50; --set your desired walkspeed here
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'JumpPower':Connect(function()
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
        end)
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
    end
end)

btns6:Slider("Jump Power", 0, 1000, 400, function(v)
    _G.JumpPower = v
end)

btns6:Toggle("Toggle Walkspeed",false, function(State)
    if State == true then
        getgenv().WalkSpeedValue = _G.WalkSpeed; --set your desired walkspeed here
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end 
        if State == false then
        getgenv().WalkSpeedValue = 16; --set your desired walkspeed here
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end
end)

btns6:Slider("Player Speed", 0, 1000, 400, function(v)
    _G.WalkSpeed = v
end)



btns6:Toggle("Noclip",false, function(v)
    _G.Noclip = v
            
            local function Noclip()
            if game.Players.LocalPlayer.Character ~= nil and _G.Noclip == true then
            for _, selfChar in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if selfChar:IsA("BasePart") and selfChar.CanCollide == true and selfChar.Name then
                        selfChar.CanCollide = false
                    end
                end
            end
            end
            
            game:GetService('RunService').Stepped:Connect(Noclip)
end)

btns6:Toggle("Chat Enabler",false, function(v)
    if v == true then
        local ChatFrame = game.Players.LocalPlayer.PlayerGui.Chat.Frame
        ChatFrame.ChatChannelParentFrame.Visible = true
        ChatFrame.ChatBarParentFrame.Position = ChatFrame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(), ChatFrame.ChatChannelParentFrame.Size.Y)
    elseif v == false then
        local ChatFrame = game.Players.LocalPlayer.PlayerGui.Chat.Frame
        ChatFrame.ChatChannelParentFrame.Visible = false
        ChatFrame.ChatBarParentFrame.Position = ChatFrame.ChatChannelParentFrame.Position + UDim2.new(0, 0, 0, 0)
    end
end)

btns6:Button("Z to Teleport", function()
    local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
    local Mouse = game.Players.LocalPlayer:GetMouse()
    Mouse.KeyDown:connect(function(key)
    if key == "z" then
    if Mouse.Target then
        HRP.CFrame = CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z)
    end
  end
 end)
end)

btns6:Button("X To Fly", function()
    local Flying = true
    local Flymode = "Camera"
    local MaxSpeed = 10 -- speed 
    local Down = {['w'] = false, ['a'] = false, ['s'] = false, ['d'] = false, ['q'] = false, ['e'] = false}
    local KD = game.Players.LocalPlayer:GetMouse().KeyDown
    local KU = game.Players.LocalPlayer:GetMouse().KeyUp
    KD:Connect(function(K)
        if K == "w" or K == "a" or K == "s" or K == "d" or K == "q" or K == "e" then 
            Down[K] = true 
            print(Down[K])
        end
    end)
    
    KU:Connect(function(K)
        if K == "w" or K == "a" or K == "s" or K == "d" or K == "q" or K == "e" then 
            Down[K] = false 
        elseif K == "x" then 
            Flying = not Flying 
            EnableFly()
        end
    end)
    
    if workspace:FindFirstChild("CenterOfGravitationalForce") then 
        Flying = false 
        workspace:FindFirstChild("CenterOfGravitationalForce"):Destroy()
    end
    
    local Inc = 0.1
    
    function EnableFly()
        local Speed = 0.5
        local Part = Instance.new("Part")
        Part.Parent = workspace
        Part.Size = Vector3.new(5,5,5)
        Part.Transparency = 1
        Part.CanCollide = false 
        Part.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        Part.Anchored = true
        Part.Name = "CenterOfGravitationalForce"
        
        local Att1 = Instance.new("Attachment")
        Att1.Name = "Att1"
        Att1.Visible = false 
        Att1.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        
        local Att2 = Instance.new("Attachment")
        Att2.Name = "Att2"
        Att2.Visible = false 
        Att2.Parent = Part
        
        local AlignPos = Instance.new("AlignPosition")
        local AlignGyro = Instance.new("AlignOrientation")
        
        AlignPos.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        AlignPos.Attachment0 = Att1
        AlignPos.MaxForce = math.huge
        AlignPos.MaxVelocity = math.huge
        AlignPos.Mode = Enum.PositionAlignmentMode.TwoAttachment
        AlignPos.Attachment1 = Att2
        AlignPos.RigidityEnabled = false 
        
        AlignGyro.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        AlignGyro.Mode = Enum.OrientationAlignmentMode.OneAttachment
        AlignGyro.CFrame = workspace.CurrentCamera.CFrame
        AlignGyro.MaxTorque = math.huge
        AlignGyro.Attachment0 = Att1
        AlignGyro.RigidityEnabled = false
        
        repeat wait() 
            game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
            if Down["w"] then 
                Part.CFrame = Part.CFrame + workspace.CurrentCamera.CFrame.lookVector * Speed
                Speed = Speed + Inc
            end
            if Down["s"] then 
                Part.CFrame = Part.CFrame - workspace.CurrentCamera.CFrame.lookVector * Speed
                Speed = Speed + Inc
            end
            if Down["q"] then 
                Part.CFrame = Part.CFrame * CFrame.new(0, Speed, 0)
            end 
            if Down["e"] then 
                Part.CFrame = Part.CFrame * CFrame.new(0, -Speed, 0)
            end
            if Speed > MaxSpeed then 
                Speed = MaxSpeed
            end
            if not Down["w"] and not Down["s"] then 
            end
            if Down["w"] then 
                AlignGyro.CFrame = workspace.CurrentCamera.CFrame * CFrame.Angles(-math.rad(Speed*4), 0 ,0)
            elseif Down["s"] then 
                AlignGyro.CFrame = workspace.CurrentCamera.CFrame * CFrame.Angles(math.rad(Speed*4), 0 ,0)
            elseif Down["q"] then 
                AlignGyro.CFrame = workspace.CurrentCamera.CFrame * CFrame.Angles(math.rad(Speed*7), 0 ,0)
            elseif Down["e"] then 
                AlignGyro.CFrame = workspace.CurrentCamera.CFrame * CFrame.Angles(-math.rad(Speed*7), 0 ,0)
            elseif Down["a"] then 
                AlignGyro.CFrame = workspace.CurrentCamera.CFrame * CFrame.Angles(0, math.rad(Speed*50) ,0)
            elseif Down["d"] then 
                AlignGyro.CFrame = workspace.CurrentCamera.CFrame * CFrame.Angles(0, -math.rad(Speed*50) ,0)
            else
                AlignGyro.CFrame = workspace.CurrentCamera.CFrame
            end
        until Flying == false
        game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
        AlignGyro:Destroy()
        AlignPos:Destroy()
        Part:Destroy()
    end
    EnableFly()
end)
-->> End Player Tab

-->> Boombox Misc
btns3:Button("Ak Grip", function()
    
    local num = 0
    local bp = game.Players.LocalPlayer.Backpack
    for i,v in pairs(bp:GetChildren()) do
        num = num + 1
        v.Name =  num
    end
    wait(0.15)
    local POS1 = game.Players.LocalPlayer.Backpack["1"]
    local POS2 = game.Players.LocalPlayer.Backpack["2"]
    local POS3 = game.Players.LocalPlayer.Backpack["3"]
    local POS4 = game.Players.LocalPlayer.Backpack["4"]
    local POS5 = game.Players.LocalPlayer.Backpack["5"]
    local POS6 = game.Players.LocalPlayer.Backpack["6"]
    local POS7 = game.Players.LocalPlayer.Backpack["7"]
    local POS8 = game.Players.LocalPlayer.Backpack["8"]
    local POS9 = game.Players.LocalPlayer.Backpack["9"]
    local POS10 = game.Players.LocalPlayer.Backpack["10"]
    local POS11 = game.Players.LocalPlayer.Backpack["11"]
    local POS12 = game.Players.LocalPlayer.Backpack["12"]
    local POS13 = game.Players.LocalPlayer.Backpack["13"]
    local POS14 = game.Players.LocalPlayer.Backpack["14"]
    local POS15 = game.Players.LocalPlayer.Backpack["15"]
    local POS16 = game.Players.LocalPlayer.Backpack["16"]
    local POS17 = game.Players.LocalPlayer.Backpack["17"]
    local POS18 = game.Players.LocalPlayer.Backpack["18"]
    local POS19 = game.Players.LocalPlayer.Backpack["19"]

    POS1.GripPos = Vector3.new(-2.193, -1.25, 0) -- MAIN POS
    POS1.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS1.GripUp = Vector3.new(0, 1, 0) -- UP
    POS1.GripForward = Vector3.new(1, 0, 0) -- FORWARD

    POS2.GripPos = Vector3.new(1.709, 1.957, 0) -- MAIN POS
    POS2.GripRight = Vector3.new(0, -0, 1) -- RIGHT
    POS2.GripUp = Vector3.new(-0.012, -1, 0) -- UP
    POS2.GripForward = Vector3.new(-1, 0.012, 0) -- FORWARD

    POS3.GripPos = Vector3.new(-4.401, -0.662, -0) -- MAIN POS
    POS3.GripRight = Vector3.new(-0, 0, 1) -- RIGHT
    POS3.GripUp = Vector3.new(0.16, 0.987, 0) -- UP
    POS3.GripForward = Vector3.new(0.987, -0.16, 0) -- FORWARD

    POS4.GripPos = Vector3.new(-2.768, -2.295, 0) -- MAIN POS
    POS4.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS4.GripUp = Vector3.new(-0.908, 0.419, 0) -- UP
    POS4.GripForward = Vector3.new(0.419, 0.908, -0) -- FORWARD

    POS5.GripPos = Vector3.new(3.527, 1.972, 0) -- MAIN POS
    POS5.GripRight = Vector3.new(0, -0, 1) -- RIGHT
    POS5.GripUp = Vector3.new(-0.008, -1, 0) -- UP
    POS5.GripForward = Vector3.new(-1, 0.008, 0) -- FORWARD

    POS6.GripPos = Vector3.new(-0.179, 6.226, 0) -- MAIN POS
    POS6.GripRight = Vector3.new(-0, 0, 1) -- RIGHT
    POS6.GripUp = Vector3.new(-0.995, -0.1, -0) -- UP
    POS6.GripForward = Vector3.new(-0.1, 0.995, -0) -- FORWARD

    POS7.GripPos = Vector3.new(5.899, 2.021, 0) -- MAIN POS
    POS7.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS7.GripUp = Vector3.new(0, -1, 0) -- UP
    POS7.GripForward = Vector3.new(-1, 0, 0) -- FORWARD

    POS8.GripPos = Vector3.new(4.954, -1.25, 0) -- MAIN POS
    POS8.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS8.GripUp = Vector3.new(0, 1, 0) -- UP
    POS8.GripForward = Vector3.new(1, 0, 0) -- FORWARD

    POS9.GripPos = Vector3.new(-0.246, -1.25, 0) -- MAIN POS
    POS9.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS9.GripUp = Vector3.new(0, 1, 0) -- UP
    POS9.GripForward = Vector3.new(1, 0, 0) -- FORWARD

    POS10.GripPos = Vector3.new(-13.816, -1.649, 0) -- MAIN POS
    POS10.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS10.GripUp = Vector3.new(0, 1, 0) -- UP
    POS10.GripForward = Vector3.new(1, 0, 0) -- FORWARD

    POS11.GripPos = Vector3.new(2.664, -1.25, 0) -- MAIN POS
    POS11.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS11.GripUp = Vector3.new(0, 1, 0) -- UP
    POS11.GripForward = Vector3.new(1, 0, 0) -- FORWARD

    POS12.GripPos = Vector3.new(3.696, -4.204, -0) -- MAIN POS
    POS12.GripRight = Vector3.new(0, -0, 1) -- RIGHT
    POS12.GripUp = Vector3.new(0.685, 0.728, -0) -- UP
    POS12.GripForward = Vector3.new(0.728, -0.685, -0) -- FORWARD

    POS13.GripPos = Vector3.new(7.473, 3.85, -0) -- MAIN POS
    POS13.GripRight = Vector3.new(-0, -0, 1) -- RIGHT
    POS13.GripUp = Vector3.new(0.265, -0.964, 0) -- UP
    POS13.GripForward = Vector3.new(-0.964, -0.265, -0) -- FORWARD

    POS14.GripPos = Vector3.new(0.422, -0.982, 0) -- MAIN POS
    POS14.GripRight = Vector3.new(-0, 0, 1) -- RIGHT
    POS14.GripUp = Vector3.new(0.972, 0.234, 0) -- UP
    POS14.GripForward = Vector3.new(0.234, -0.972, 0) -- FORWARD

    POS15.GripPos = Vector3.new(-0.599, -2.667, 0) -- MAIN POS
    POS15.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS15.GripUp = Vector3.new(-0.979, 0.205, 0) -- UP
    POS15.GripForward = Vector3.new(0.205, 0.979, -0) -- FORWARD

    POS16.GripPos = Vector3.new(-11.727, -1.663, 0) -- MAIN POS
    POS16.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS16.GripUp = Vector3.new(0, 1, 0) -- UP
    POS16.GripForward = Vector3.new(1, 0, 0) -- FORWARD

    POS17.GripPos = Vector3.new(-6.742, -1.338, 0) -- MAIN POS
    POS17.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS17.GripUp = Vector3.new(0.044, 0.999, 0) -- UP
    POS17.GripForward = Vector3.new(0.999, -0.044, 0) -- FORWARD

    POS18.GripPos = Vector3.new(0.146, 1.615, 0) -- MAIN POS
    POS18.GripRight = Vector3.new(-0, 0, 1) -- RIGHT
    POS18.GripUp = Vector3.new(-0.401, -0.916, -0) -- UP
    POS18.GripForward = Vector3.new(-0.916, 0.401, -0) -- FORWARD

    POS19.GripPos = Vector3.new(-9.3, -1.675, 0) -- MAIN POS
    POS19.GripRight = Vector3.new(0, 0, 1) -- RIGHT
    POS19.GripUp = Vector3.new(0, 1, 0) -- UP
    POS19.GripForward = Vector3.new(1, 0, 0) -- FORWARD
end)

btns3:Button("Bad Circle Grip", function()
    for index,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
        v.Grip = CFrame.new(Vector3.new(1, 3, 0)) * CFrame.Angles(math.deg(0), 0, index)
        v.Parent = game.Players.LocalPlayer.Character
        end
    end
end)

btns3:Button("Car Wheel Grip", function()
    for index,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
        v.Grip = CFrame.new(Vector3.new(0, -1, 0)) * CFrame.Angles(math.deg(0), 0, index)
        v.Parent = game.Players.LocalPlayer.Character
        end
    end
end)

btns3:Label("Vizualizers")
vis = false
sets = {}
muted = {}
function gyro()
    	for t,b in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
	        for r,n in pairs(b:GetChildren()) do
	            for u,m in pairs(b.Handle:GetChildren()) do
	                if m.Name == "BodyPosition" then
	                    m:Destroy()
	                end
                    if m.Name == "BodyGyro" then
                        m:Destroy()
                    end
	            end
	        end
    	end
    end
function getSelection()
    local toolsl = {}
    for i,v in next, game.Players.LocalPlayer.Backpack:GetChildren() do
lowername = string.lower(v.Name)
        if v:IsA'Tool' and v.Name == "Boombox" or "BoomBox" then
            table.insert(toolsl,v)
        end
    end
    for i,v in next, game.Players.LocalPlayer.Character:GetChildren() do
lowername = string.lower(v.Name)
        if v:IsA'Tool' and v.Name == "Boombox" or "BoomBox" then
            table.insert(toolsl,v)
        end
    end
    return toolsl
end
wait(1)
    Index = 0
    Devide = 0
    x = 360
    switch = false
    pbl = Instance.new("NumberValue", game.ReplicatedStorage)
    off = Instance.new("NumberValue", game.ReplicatedStorage)
    d = 500
    prefix = "-"
    sin = Instance.new("NumberValue")
    sin.Value = 3.14
    ym = Instance.new("NumberValue")
    ym.Value = -4
    rx = Instance.new("NumberValue")
    ry = Instance.new("NumberValue")
    rz = Instance.new("NumberValue")
    tx = Instance.new("NumberValue")
    ty = Instance.new("NumberValue")
    tz = Instance.new("NumberValue")
    pbl.Value = 1
    off.Value = 1
    local ts = game:GetService("TweenService")
    function prop1(i, v)
        local ti = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.InOut, 0, false, 0)
        local prop = {
            Value = v
        }
        local aaa = ts:Create(i, ti, prop)
        aaa:Play()
    end
    mode1, mode2, mode3, mode4 = true, false, false, false
    local player = game.Players.LocalPlayer.Name
    game.Players.LocalPlayer.Chatted:Connect(function(msg)
        local msg = msg:lower()
        if msg:sub(1, 7) == "prefix " then
            prefix = msg:sub(8)
        end
        if msg:sub(1, 6) == prefix .. "mode " then
            if msg:sub(7, 7) == "1" then
                mode1 = true
                mode2 = false
                mode3 = false
                mode4 = false
            elseif msg:sub(7, 7) == "2" then
                mode1 = false
                mode2 = true
                mode3 = false
                mode4 = false
            elseif msg:sub(7, 7) == "3" then
                mode1 = false
                mode2 = false
                mode3 = true
                mode4 = false
            elseif msg:sub(7, 7) == "4" then
                mode1 = false
                mode2 = false
                mode3 = false
                mode4 = true
            end
        end
        if msg:sub(1, 6) == prefix .. "play " then
            for i, v in pairs(sets) do
                v.Remote:FireServer("PlaySong", msg:sub(7))
            end
        end
        if msg:sub(1, 3) == prefix .. "p " then
            player = gotya(msg:sub(4))
            print(player)
            if player == nil then
                FoundPlr = false
            else
                FoundPlr = true
            end
        end
        if msg:sub(1, 5) == prefix .. "pbl " then
            prop1(pbl, tonumber(msg:sub(6)))
        end
        if msg:sub(1, 4) == prefix .. "os " then
            prop1(off, tonumber(msg:sub(5)))
        end
        if msg:sub(1, 3) == prefix .. "d " then
            d = tonumber(msg:sub(4))
        end
        if msg:sub(1, 3) == prefix .. "y " then
            prop1(ym, tonumber(msg:sub(4)))
        end
        if msg:sub(1, 3) == prefix .. "k " then
            k = tonumber(msg:sub(4))
        end
        if msg:sub(1, 4) == prefix .. "rx " then
            prop1(rx, tonumber(msg:sub(5)))
        end
        if msg:sub(1, 4) == prefix .. "ry " then
            prop1(ry, tonumber(msg:sub(5)))
        end
        if msg:sub(1, 4) == prefix .. "rz " then
            prop1(rz, tonumber(msg:sub(5)))
        end
        if msg:sub(1, 4) == prefix .. "tx " then
            prop1(tx, tonumber(msg:sub(5)))
        end
        if msg:sub(1, 4) == prefix .. "ty " then
            prop1(ty, tonumber(msg:sub(5)))
        end
        if msg:sub(1, 4) == prefix .. "tz " then
            prop1(tz, tonumber(msg:sub(5)))
        end
        if msg:sub(1, 5) == prefix .. "sin " then
            prop1(sin, tonumber(msg:sub(6)))
        end
    end)
    k = 1.1
function anchor()
    game.Players.LocalPlayer.Character.Torso.Anchored = true
    wait(0.2)
    for i,a in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if a.Name == "Right Arm" then
            for i,z in pairs(a:GetChildren()) do
                if z.Name == "RightGrip" then
                    z:Destroy()
                end
            end
            wait(0.2)
            game.Players.LocalPlayer.Character.Torso.Anchored = false
        end
    end
end
wait(1)
btns3:Button("Sync", function()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Tool") then
            v.Handle.Sound.Playing = false
            v.Handle.Sound.TimePosition = 0
            v.Handle.Sound.Playing = true
        end
    end
end) 
btns3:Textbox("Music ID", "0",function(v)   
    _G.SongId = v
end)
btns3:Button("Play ID", function()
    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            v.Parent = game.Players.LocalPlayer.Character 
        end
    end
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Tool") then
            v:FindFirstChildOfClass("RemoteEvent"):FireServer("PlaySong", tostring(_G.SongId))
        end
    end
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Tool") then
            v.Handle.Sound.Playing = false
            v.Handle.Sound.TimePosition = 0
            v.Handle.Sound.Playing = true
        end
    end 
end)
btns3:Button("Snake", function()
    DiscordLib:Notification("Da Hub", "Starting Viz.", "Enjoy")
    local waitTime = 1/60
	vis = true
	Index = 360 / #game.Players.LocalPlayer.Backpack:GetChildren()
	game.Players.LocalPlayer.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "0"
	for i, v in next, getSelection() do
		if v:IsA("Tool") then
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("NumberValue") then
					n:Destroy()
				end
			end
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("BodyGyro") then
					n:Destroy()
				end
			end
			for z, n in pairs(v.Handle:GetChildren()) do
				if n:IsA("BodyPosition") then
					n:Destroy()
				end
			end
			_G.power = 2000
			_G.d = 50
			local bp = Instance.new("BodyPosition", v.Handle)
			bp.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			bp.P = 10
			bp.Position = game.Players.LocalPlayer.Character.Torso.Position
			local bg = Instance.new("BodyGyro", v.Handle)
			bg.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			bg.P = 1.0
			local val = Instance.new("NumberValue", v)
			local yv = Instance.new("NumberValue", v)
			local at1, at2 = Instance.new("Attachment", v.Handle), Instance.new("Attachment", v.Handle)
			at1.Name = "at1"
			at2.Name = "at2"
			at1.Position = Vector3.new(3,0,0)
			at2.Position = Vector3.new(3,0,0)
			yv.Value = k
			k = yv.Value + k
			val.Value = x
			x = val.Value - Index
			local primaryPart = v.Handle
			local lookAt = game.Players.LocalPlayer.Character.Torso.Position
			local char = game.Players.LocalPlayer.Character
			curpos = char.HumanoidRootPart.CFrame
			char.HumanoidRootPart.Anchored = true
			char.HumanoidRootPart.CFrame = CFrame.new(0,3,0)
			wait(0.2)
			v.Parent = char
			wait(0.1)
			char.HumanoidRootPart.CFrame = curpos
			wait(0.1)
			char.HumanoidRootPart.Anchored = false
			for i,a in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if a.Name == "Right Arm" then
					for i,z in pairs(a:GetChildren()) do
						if z.Name == "RightGrip" then
							z:Destroy()
						end
					end
				end
			end
			v.Handle.Sound.TimePosition = 0
			rot = 0.1
			randomnumber = math.random(12, 69)
			secrot = 0.1
			visual = 0
			local angle = Vector3.new(0,math.rad(90),0)
			local Connection
			Connection = game:GetService("RunService").Heartbeat:Connect(function()
				bp.D = d
				rot = rot+sin.Value*0.015+v.Handle.Sound.PlaybackLoudness/1400
				local tools = getSelection()
				v.Handle.Velocity = Vector3.new(2e2,0,0)
				v.Handle.Rotation = Vector3.new(0+rot,0,0+rot)
			    if v.Handle.Parent == game.Workspace then
		    else
			    v.Handle.CFrame = game.Players[player].Character.Torso.CFrame * CFrame.new(i * off.Value - (#tools * 3 / 2), math.sin(math.rad(val.Value/0.5+rot+v.Handle.Sound.PlaybackLoudness/125))*pbl.Value,0) * CFrame.new(0,0+ym.Value,0)
				if v.Parent == game.Players.LocalPlayer.Backpack then
				    vis = false
				    Connection:Disconnect()
				end
				if vis == false then
				    v.Handle["BodyGyro"]:Destroy()
				    v.Handle["BodyPosition"]:Destroy()
				    wait(0.1)
					Connection:Disconnect()
					v.Parent = game.Players.LocalPlayer.Backpack
					wait(waitTime)
					end
				end
			end)
		end
	end
end)
btns3:Button("Orbit", function()
    DiscordLib:Notification("Da Hub", "Starting Viz.", "Enjoy")
    local waitTime = 1/60
	vis = true
	Index = 360 / #game.Players.LocalPlayer.Backpack:GetChildren()
	game.Players.LocalPlayer.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "0"
	for i, v in next, getSelection() do
		if v:IsA("Tool") then
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("NumberValue") then
					n:Destroy()
				end
			end
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("BodyGyro") then
					n:Destroy()
				end
			end
			for z, n in pairs(v.Handle:GetChildren()) do
				if n:IsA("BodyPosition") then
					n:Destroy()
				end
			end
			_G.power = 2000
			_G.d = 50
			local bp = Instance.new("BodyPosition", v.Handle)
			bp.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			bp.P = 10
			bp.Position = game.Players.LocalPlayer.Character.Torso.Position
			local bg = Instance.new("BodyGyro", v.Handle)
			bg.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			bg.P = 1.0
			local val = Instance.new("NumberValue", v)
			local yv = Instance.new("NumberValue", v)
			local at1, at2 = Instance.new("Attachment", v.Handle), Instance.new("Attachment", v.Handle)
			at1.Name = "at1"
			at2.Name = "at2"
			at1.Position = Vector3.new(-1.4, 0, 0)
			at2.Position = Vector3.new(1.4, 0, 0)
			yv.Value = k
			k = yv.Value + k
			val.Value = x
			x = val.Value - Index
			local primaryPart = v.Handle
			local lookAt = game.Players.LocalPlayer.Character.Torso.Position
			local char = game.Players.LocalPlayer.Character
			curpos = char.HumanoidRootPart.CFrame
			char.HumanoidRootPart.Anchored = true
			char.HumanoidRootPart.CFrame = CFrame.new(0,555,0)
			wait(0.2)
			v.Parent = char
			wait(0.1)
			char.HumanoidRootPart.CFrame = curpos
			wait(0.1)
			char.HumanoidRootPart.Anchored = false
			for i,a in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if a.Name == "Right Arm" then
					for i,z in pairs(a:GetChildren()) do
						if z.Name == "RightGrip" then
							z:Destroy()
						end
					end
				end
			end
			v.Handle.Sound.TimePosition = 0
			rot = 0.1
			randomnumber = math.random(12, 69)
			secrot = 0.1
			visual = 0
			local angle = Vector3.new(0,math.rad(90),0)
			local Connection
			Connection = game:GetService("RunService").Heartbeat:Connect(function()
				bp.D = d
				rot = rot+sin.Value*0.015+v.Handle.Sound.PlaybackLoudness/1400
				local tools = getSelection()
				v.Handle.Velocity = Vector3.new(2e2,0,0)
				v.Handle.Rotation = Vector3.new(0+rot,0,0+rot)
				v.Handle.Position = game.Players[player].Character.Head.Position + Vector3.new(math.sin(math.rad(val.Value+v.Handle.Sound.PlaybackLoudness/250) + time() * sin.Value) * off.Value, ym.Value + math.abs(math.sin(yv.Value + time() * math.pi)) * v.Handle.Sound.PlaybackLoudness * 0.005 * pbl.Value, math.cos(math.rad(val.Value+v.Handle.Sound.PlaybackLoudness/250) + time() * sin.Value) * off.Value)
			    if v.Handle.Parent == game.Workspace then
		    else
			    v.Handle.CFrame = CFrame.new(v.Handle.Position, Vector3.new(game.Players[player].Character.Head.Position.X, game.Players[player].Character.Head.Position.Y - 4, game.Players[player].Character.Head.Position.Z)) * CFrame.Angles(0+v.Handle.Sound.PlaybackLoudness/600,0,0) * CFrame.new(0,0,0+v.Handle.Sound.PlaybackLoudness/300)
				if v.Parent == game.Players.LocalPlayer.Backpack then
				    vis = false
				    Connection:Disconnect()
				end
				if vis == false then
				    v.Handle["BodyGyro"]:Destroy()
				    v.Handle["BodyPosition"]:Destroy()
				    wait(0.1)
					Connection:Disconnect()
					v.Parent = game.Players.LocalPlayer.Backpack
					wait(waitTime)
					end
				end
			end)
		end
	end
end)
btns3:Button("Crazy", function()
    DiscordLib:Notification("Da Hub", "Starting Viz.", "Enjoy")
    local waitTime = 1/60
	vis = true
	Index = 360 / #game.Players.LocalPlayer.Backpack:GetChildren()
	game.Players.LocalPlayer.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "0"
	for i, v in next, getSelection() do
		if v:IsA("Tool") then
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("NumberValue") then
					n:Destroy()
				end
			end
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("BodyGyro") then
					n:Destroy()
				end
			end
			for z, n in pairs(v.Handle:GetChildren()) do
				if n:IsA("BodyPosition") then
					n:Destroy()
				end
			end
			_G.power = 5
			_G.d = 50
			local bp = Instance.new("BodyPosition", v.Handle)
			bp.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			bp.P = 0
			bp.Position = game.Players.LocalPlayer.Character.Torso.Position
			local bg = Instance.new("BodyGyro", v.Handle)
			bg.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			bg.P = 1.0
			local val = Instance.new("NumberValue", v)
			local yv = Instance.new("NumberValue", v)
			local at1, at2 = Instance.new("Attachment", v.Handle), Instance.new("Attachment", v.Handle)
			at1.Name = "at1"
			at2.Name = "at2"
			at1.Position = Vector3.new(-1.4, 0, 0)
			at2.Position = Vector3.new(1.4, 0, 0)
			yv.Value = k
			k = yv.Value + k
			val.Value = x
			x = val.Value - Index
			local primaryPart = v.Handle
			local lookAt = game.Players.LocalPlayer.Character.Torso.Position
			local char = game.Players.LocalPlayer.Character
			curpos = char.HumanoidRootPart.CFrame
			char.HumanoidRootPart.Anchored = true
			char.HumanoidRootPart.CFrame = CFrame.new(0,555,0)
			wait(0.2)
			v.Parent = char
			wait(0.1)
			char.HumanoidRootPart.CFrame = curpos
			wait(0.1)
			char.HumanoidRootPart.Anchored = false
			for i,a in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if a.Name == "Right Arm" then
					for i,z in pairs(a:GetChildren()) do
						if z.Name == "RightGrip" then
							z:Destroy()
						end
					end
				end
			end
			v.Handle.Sound.TimePosition = 0
			rot = 0.1
			randomnumber = math.random(12, 69)
			secrot = 0.1
			visual = 0
			local angle = Vector3.new(0,math.rad(90),0)
			local Connection
			Connection = game:GetService("RunService").Heartbeat:Connect(function()
				bp.D = d
				rot = rot+sin.Value*0.015+v.Handle.Sound.PlaybackLoudness/1400
				local tools = getSelection()
				v.Handle.Velocity = Vector3.new(2e2,0,0)
				v.Handle.Rotation = Vector3.new(0+rot,0,0+rot)
				v.Handle.Position = game.Players[player].Character.Head.Position + Vector3.new(math.sin(math.rad(val.Value) + time() * sin.Value) * off.Value, ym.Value + math.abs(math.sin(yv.Value + time() * math.pi)) * v.Handle.Sound.PlaybackLoudness * 0.005 * pbl.Value, math.cos(math.rad(val.Value) + time() * sin.Value) * off.Value) + Vector3.new(0,math.rad((i*(360/#tools))),0)
				if v.Parent == game.Players.LocalPlayer.Backpack then
				    vis = false
				    Connection:Disconnect()
				end
				if vis == false then
				    v.Handle["BodyGyro"]:Destroy()
				    v.Handle["BodyPosition"]:Destroy()
				    wait(0.1)
					Connection:Disconnect()
					v.Parent = game.Players.LocalPlayer.Backpack
					wait(waitTime)
					end
				end)
			end
	end
end)

btns3:Button("Orbit Wheel", function()
    DiscordLib:Notification("Da Hub", "Starting Viz.", "Enjoy")
    local waitTime = 1/60
	vis = true
	Index = 360 / #game.Players.LocalPlayer.Backpack:GetChildren()
	game.Players.LocalPlayer.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "0"
	for i, v in next, getSelection() do
		if v:IsA("Tool") then
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("NumberValue") then
					n:Destroy()
				end
			end
			for z, n in pairs(v:GetChildren()) do
				if n:IsA("BodyGyro") then
					n:Destroy()
				end
			end
			for z, n in pairs(v.Handle:GetChildren()) do
				if n:IsA("BodyPosition") then
					n:Destroy()
				end
			end
			_G.power = 2000
			_G.d = 50
			local bp = Instance.new("BodyPosition", v.Handle)
			bp.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			bp.P = 10
			bp.Position = game.Players.LocalPlayer.Character.Torso.Position
			local bg = Instance.new("BodyGyro", v.Handle)
			bg.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			bg.P = 1.0
			local val = Instance.new("NumberValue", v)
			local yv = Instance.new("NumberValue", v)
			local at1, at2 = Instance.new("Attachment", v.Handle), Instance.new("Attachment", v.Handle)
			at1.Name = "at1"
			at2.Name = "at2"
			at1.Position = Vector3.new(-1.4, 0, 0)
			at2.Position = Vector3.new(1.4, 0, 0)
			yv.Value = k
			k = yv.Value + k
			val.Value = x
			x = val.Value - Index
			local primaryPart = v.Handle
			local lookAt = game.Players.LocalPlayer.Character.Torso.Position
			local char = game.Players.LocalPlayer.Character
			curpos = char.HumanoidRootPart.CFrame
			char.HumanoidRootPart.Anchored = true
			char.HumanoidRootPart.CFrame = CFrame.new(0,555,0)
			wait(0.2)
			v.Parent = char
			wait(0.1)
			char.HumanoidRootPart.CFrame = curpos
			wait(0.1)
			char.HumanoidRootPart.Anchored = false
			for i,a in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if a.Name == "Right Arm" then
					for i,z in pairs(a:GetChildren()) do
						if z.Name == "RightGrip" then
							z:Destroy()
						end
					end
				end
			end
			v.Handle.Sound.TimePosition = 0
			rot = 0.1
			randomnumber = math.random(12, 69)
			secrot = 0.1
			visual = 0
			local angle = Vector3.new(0,math.rad(90),0)
			local Connection
			Connection = game:GetService("RunService").Heartbeat:Connect(function()
				bp.D = d
				rot = rot+sin.Value*0.015
				local tools = getSelection()
				v.Handle.Velocity = Vector3.new(2e2,0,0)
				v.Handle.Position = game.Players[player].Character.Torso.Position
			    if v.Handle.Parent == game.Workspace then
		    else
			    v.Handle.CFrame = CFrame.new(v.Handle.Position, Vector3.new(game.Players[player].Character.Head.Position.X, game.Players[player].Character.Head.Position.Y - 2, game.Players[player].Character.Head.Position.Z)) * CFrame.Angles(math.rad((i*(360/#tools))+rot),0,0) * CFrame.new(0,0+ym.Value,0+off.Value+v.Handle.Sound.PlaybackLoudness/150)
				if v.Parent == game.Players.LocalPlayer.Backpack then
				    vis = false
				    Connection:Disconnect()
				end
				if vis == false then
				    v.Handle["BodyGyro"]:Destroy()
				    v.Handle["BodyPosition"]:Destroy()
				    wait(0.1)
					Connection:Disconnect()
					v.Parent = game.Players.LocalPlayer.Backpack
					wait(waitTime)
					end
				end
			end)
		end
	end
end)


btns3:Seperator()
btns3:Label("Boombox Misc") 

btns3:Textbox("Dupe Amount", "0", true, function(v) 
    _G.DupeValue = v
end)

btns3:Button("Dupe", function()
    for i = 1, _G.DupeValue do
        char = game.Players.LocalPlayer.Character
        game.Players.LocalPlayer.Character = nil
        game.Players.LocalPlayer.Character = char
        if char:FindFirstChild("Animate") then
            char.Animate:Destroy()
        end
        wait(0.3)
        game.Players.LocalPlayer.Character = game.Players.LocalPlayer.Character
    	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,9999,0)
    	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
    	wait(0.5)
    	for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    	    if v:IsA("Tool") then
    		    v.Parent = game.Players.LocalPlayer.Character 
    		    v.Parent = game.Workspace
    		end
    	end
    	if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
        	for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        	    if v:IsA("Tool") then
        		    v.Parent = game.Workspace
        		end
        	end
    	end
    	wait(1)
    	game.Players.LocalPlayer.Character.Humanoid:Destroy()
    	game.Players.LocalPlayer.CharacterAdded:Wait()
    	game.Players.LocalPlayer.Character = game.Players.LocalPlayer.Character
    	wait(0.1)
    	for i,v in pairs(game.workspace:GetChildren()) do
    	    if v:IsA("Tool") then
    		    game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
    		end
    	end
    	wait(0.7)
    	if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
        	for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        	    if v:IsA("Tool") then
        		    v.Parent = game.Players.LocalPlayer.Backpack
        		end
        	end
    	end
    end
end)

btns3:Textbox("Mass Play ID", "0", true, function(v) 
    _G.SongId = v
end)

btns3:Button("Mass Play", function()
        for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") then
                v.Parent = game.Players.LocalPlayer.Character 
            end
        end
        for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") then
                v:FindFirstChildOfClass("RemoteEvent"):FireServer("PlaySong", tostring(_G.SongId))
            end
        end
        for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") then
                v.Handle.Sound.Playing = false
                v.Handle.Sound.TimePosition = 0
                v.Handle.Sound.Playing = true
            end
        end   
end)

btns3:Textbox("Backpack ID", "0", true, function(v) 
    _G.Bass = v
end)

btns3:Button("Backpack Play", function()
id = _G.Bass
  for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if string.find(string.lower(v.Name),'boom') then
    v.Parent = game.Players.LocalPlayer.Character
    wait(0.1)
    v.Remote:FireServer("PlaySong", id);
    wait(1)
    v.Handle.Sound.Parent = game.Lighting
    v.Server:Destroy()
    v.Client:Destroy()
    wait(0.1)
    v.Parent = game.Lighting
   end
  end
end)
btns3:Seperator()
btns3:Toggle("Gtools",false, function(v)
    _G.Steal = v
    game:GetService('RunService').Heartbeat:Connect(function()
	    if _G.Steal == true then
        	for i,v in pairs(game.Workspace:GetChildren()) do
                if v:IsA("Tool") then
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                end
        	end
        end
    end)
end)
btns3:Seperator()

btns3:Textbox("Console Spam", "Say anything here then check console! (Hold out ur radio)", true, function(v) 
    _G.console = v
end)

btns3:Button("Console Spam", function()
local msg = _G.console
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
      if v:IsA('Tool') then
      v.Remote:FireServer('PlaySong',"rbxassetid://"..msg)
     end
   end
end)


btns4:Label("Working on it.")

local Sound = {}
for i,v in pairs(game.Players:GetChildren()) do
    if v.Character:FindFirstChild("Boombox") and not table.find(Sound, v.Character.Boombox.Handle.Sound.SoundId) then 
        table.insert(Sound, v.Character.Boombox.Handle.Sound.SoundId)
    end
end

local drop = btns4:Dropdown("See Audios",Sound, function(copied)
setclipboard(copied)
end)

btns4:Button("Refresh",function()
    drop:Clear()
    wait(0.1)
    for i,v in pairs(game.Players:GetChildren()) do
        if v.Character:FindFirstChild("Boombox") then
            drop:Add(tostring(v.Character.Boombox.Handle.Sound.SoundId))
        end
    end
    end)

DiscordLib:Notification("Da Hub", "Welcome to Da Hub.", "Enjoy")


-- this script is extremely old so don violate lol
